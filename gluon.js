
let Gluon=window.Gluon||console.warn("Gluon base not set. Defaulting to '/node_modules/'")||{base:'/node_modules/'};const importSelector='link[rel=import]';const importDisableType='import-disable';const disabledLinkSelector=`link[rel=stylesheet][href][type=${importDisableType}]`;const importDependenciesSelector=`${importSelector}, ${disabledLinkSelector},
    style:not([type]), link[rel=stylesheet][href]:not([type]),
    script:not([type]), script[type="application/javascript"],
    script[type="text/javascript"]`;const importDependencyAttr='import-dependency';const rootImportSelector=`${importSelector}:not(${importDependencyAttr})`;const pendingScriptsSelector=`script[${importDependencyAttr}]`;const pendingStylesSelector=`style[${importDependencyAttr}],
    link[rel=stylesheet][${importDependencyAttr}]`;const TEMPLATE=Symbol('template');const ATTACHTEMPLATE=Symbol('attachTemplate');const CREATEIDCACHE=Symbol('createIdCache');const ABS_URL=/(^\/)|(^#)|(^[\w-\d]*:)/;let workingURL;let resolveDoc;const TEMPLATEREQUESTS={};class GluonElement extends HTMLElement{constructor(){super();this[ATTACHTEMPLATE]();this[CREATEIDCACHE]();}
resolveUrl(url,baseURI){if(url&&ABS_URL.test(url)){return url;}
if(!baseURI){baseURI=(this.constructor._source&&this.constructor._source.baseURI)||window.location.href;}
if(workingURL===undefined){workingURL=false;try{const u=new URL('b','http://a');u.pathname='c%20d';workingURL=u.href==='http://a/c%20d';}catch(e){}}
if(workingURL){return new URL(url,baseURI).href;}
if(!resolveDoc){resolveDoc=document.implementation.createHTMLDocument('temp');resolveDoc.base=resolveDoc.createElement('base');resolveDoc.head.appendChild(resolveDoc.base);resolveDoc.anchor=resolveDoc.createElement('a');resolveDoc.body.appendChild(resolveDoc.anchor);}
resolveDoc.base.href=baseURI;resolveDoc.anchor.href=url;return resolveDoc.anchor.href||url;}}
GluonElement.prototype[ATTACHTEMPLATE]=function(){if(this.constructor[TEMPLATE]===undefined){console.debug(`No template found for ${this.constructor.is}`);this.constructor[TEMPLATE]=false;return;}
if(this.constructor[TEMPLATE]){this.attachShadow({mode:'open'});this.shadowRoot.appendChild(this.constructor[TEMPLATE].content.cloneNode(true));}};GluonElement.prototype[CREATEIDCACHE]=function(){if(this.shadowRoot){this.$={};this.shadowRoot.querySelectorAll('[id]').forEach(element=>{this.$[element.id]=element;});}};Gluon.Element=GluonElement;let loadTemplate=(tag,element)=>{};Gluon.define=(tag,element)=>{if(element[TEMPLATE]===undefined){element[TEMPLATE]=false;const templateFile=`${Gluon.base}${element.template}`;const request=new XMLHttpRequest();request.open('GET',templateFile,true);request.onload=()=>{const resource=request.response||request.responseText;if(request.status===304||request.status===0||(request.status>=200&&request.status<300)){const template=document.createElement('template');template.innerHTML=resource;const namedTemplate=template.content.querySelector(`#${tag}-template`);element[TEMPLATE]=namedTemplate||template;if(window.ShadyCSS){window.ShadyCSS.prepareTemplate(element[TEMPLATE],tag);}
const scripts=template.content.querySelectorAll('script');const loadScript=n=>{if(n<scripts.length){const script=scripts[n];const s=document.createElement('script');Array.from(script.attributes).forEach(attr=>{s.setAttribute(attr.name,attr.value);});s.addEventListener('load',()=>loadScript(n+1));document.head.appendChild(s);}else{customElements.define(tag,element);}};loadScript(0);}else{console.warn(`Failed to load template for ${tag}`);customElements.define(tag,element);}};request.send();}};export{Gluon};