
(Gluon=>{if(Gluon.Element){return;}
let ABS_URL=/(^\/)|(^#)|(^[\w-\d]*:)/;let workingURL;let resolveDoc;class GluonElement extends HTMLElement{constructor(){super();this._attachTemplate();this._createElementCache();}
resolveUrl(url,baseURI){if(url&&ABS_URL.test(url)){return url;}
if(!baseURI){baseURI=this.constructor._source.baseURI||window.location.href;}
if(workingURL===undefined){workingURL=false;try{const u=new URL('b','http://a');u.pathname='c%20d';workingURL=(u.href==='http://a/c%20d');}catch(e){}}
if(workingURL){return(new URL(url,baseURI)).href;}
if(!resolveDoc){resolveDoc=document.implementation.createHTMLDocument('temp');resolveDoc.base=resolveDoc.createElement('base');resolveDoc.head.appendChild(resolveDoc.base);resolveDoc.anchor=resolveDoc.createElement('a');resolveDoc.body.appendChild(resolveDoc.anchor);}
resolveDoc.base.href=baseURI;resolveDoc.anchor.href=url;return resolveDoc.anchor.href||url;}
_attachTemplate(){let template=this.constructor._source.ownerDocument.getElementById(`${this.constructor.is}-template`);if(window.ShadyCSS){window.ShadyCSS.prepareTemplate(template,this.constructor.is);}
let content=template.content.cloneNode(true);this.attachShadow({mode:'open'});this.shadowRoot.appendChild(content);}
_createElementCache(){this.$={};this.shadowRoot.querySelectorAll('*').forEach((element)=>{if(element.id){this.$[element.id]=element;}});}}
Gluon.Element=GluonElement;})(window['Gluon']=(window['Gluon']||{}));
//# sourceMappingURL=gluon.min.js.map
